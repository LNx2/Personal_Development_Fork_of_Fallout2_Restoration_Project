#define SCRIPT_REALNAME "gl_k_alcohl"
#include "../headers/define.h"
#include "../headers/scripts.h"
#include "../headers/command.h"
#include "../sfall/sfall.h"

procedure start;

variable time_passed_since_last_consumption;
variable msg;
variable time_of_addiction;

#define TIME_ALCOHOL_USAGE_SPORADIC ONE_GAME_WEEK
#define TIME_ALCOHOL_USAGE_MEDIUM (3*ONE_GAME_DAY)
#define TIME_ALCOHOLIC_SHAKES (2*ONE_GAME_DAY)
#define TIME_DURATION_OF_ADDICTION ONE_GAME_WEEK
#define TIME_DURATION_FOR_GLOBAL_TIMER ONE_GAME_DAY
#define INTERFACE_TAG_ADDICT 4

#define MSG_FILE "k_alcohl.msg"
#define MSG_became_addicted 1
#define MSG_cravings 2
#define MSG_shakes 3
#define MSG_relieved 4

#define SGVAR_last_drink_date "k_alco_d"
#define SGVAR_time_of_alcohol_addiction "k_alco_a"

/**
 * True is `x` is an alcohol bottle, False otherwise.
 * @arg {ObjPtr} x
 */
#define is_alcohol(x) \
    (  (obj_pid(x) == PID_BEER) \
    or (obj_pid(x) == PID_BOOZE) \
    or (obj_pid(x) == PID_GAMMA_GULP_BEER) \
    or (obj_pid(x) == PID_ABBEY_BOOZE) \
    or (obj_pid(x) == PID_ROENTGEN_RUM) \
    or (obj_pid(x) == PID_ROT_GUT) )

/**
 * Displays message `x` from **game** message file `msg`
 * @arg {int} x - message number
 */
#define display_mymsg(x) display_msg(message_str_game(msg, x))

/**
 * Makes target an addict if all checks pass.
 * @arg {ObjPtr} who - target critter
 * @arg {ObjPtr} item - item being used
 */
procedure drink(variable who, variable item) begin
    variable roll, chance, time_since_last_drink;

    // target is not PC
    if (who != dude_obj) then return;
    // not alcohol
    if not is_alcohol(item) then return;

    // PC is drinking
    time_since_last_drink = game_time - get_sfall_global_int(SGVAR_last_drink_date);
    set_sfall_global(SGVAR_last_drink_date, game_time);

    // already addicted
    if (global_var(GVAR_ALCOHOL_ADDICT) == 1) then return;

    // regular drinking increases chances
    if (time_since_last_drink >= TIME_ALCOHOL_USAGE_SPORADIC) then begin
        chance = 1;
    end else if (time_since_last_drink >= TIME_ALCOHOL_USAGE_MEDIUM) then begin
        chance = 5;
    end else begin
        chance = 10;
    end
    roll = random(1, 100);

    // Drug reliant: double chance
    if has_trait(TRAIT_TRAIT, dude_obj, TRAIT_drug_addict) then chance = chance * 2;
    // Drug resistant: half chance
    if has_trait(TRAIT_TRAIT, dude_obj, TRAIT_drug_resistant) then chance = chance * 0.5;
    if (roll > chance) then return;

    display_mymsg(MSG_became_addicted);
    set_critter_stat(dude_obj, STAT_ag, -1);
    set_critter_stat(dude_obj, STAT_ch, -1);
    if not is_iface_tag_active(INTERFACE_TAG_ADDICT) then show_iface_tag(INTERFACE_TAG_ADDICT);
    set_global_var(GVAR_ALCOHOL_ADDICT, 1);
    set_sfall_global(SGVAR_time_of_alcohol_addiction, game_time);
    add_global_timer_event(TIME_DURATION_FOR_GLOBAL_TIMER, 0);
end

// Use from main game window (hands)
procedure use_obj_on_obj_handler begin
    variable who = get_sfall_arg_at(0);
    variable item = get_sfall_arg_at(2);
    call drink(who, item);
end

// Use from inventory
procedure use_obj_handler begin
    variable who = get_sfall_arg_at(0);
    variable item = get_sfall_arg_at(1);
    call drink(who, item);
end


procedure timed_event_p_proc begin
    display_msg("<test> timed_event_p_proc has been run, "+fixed_param);

    // no addiction, skip run
    if (global_var(GVAR_ALCOHOL_ADDICT) != 1) then return;

    // Below: has addiction
    time_passed_since_last_consumption = ( 1.0*( game_time - get_sfall_global_int(SGVAR_time_of_alcohol_addiction) ) ) / (TIME_ALCOHOLIC_SHAKES);
    // shakes
    display_msg("<test> value of the time_passed_since_last_consumption variable is:"+time_passed_since_last_consumption);
    if ((time_passed_since_last_consumption > 0.9) and (time_passed_since_last_consumption < 1.1) ) then begin
        if in_world_map then force_encounter(0);
        display_mymsg(MSG_shakes);
    end else if ((time_passed_since_last_consumption > 1.9) and (time_passed_since_last_consumption < 2.1) ) then begin
        if in_world_map then force_encounter(0);
        display_mymsg(MSG_cravings);
    end else if ((time_passed_since_last_consumption > 2.9) and (time_passed_since_last_consumption < 3.1) ) then begin
        if in_world_map then force_encounter(0);
        display_mymsg(MSG_cravings);
    end

    // relief
    time_of_addiction = get_sfall_global_int(SGVAR_time_of_alcohol_addiction);
    if ((game_time - time_of_addiction) >= TIME_DURATION_OF_ADDICTION) then begin
        set_global_var(GVAR_ALCOHOL_ADDICT, 0);
        set_critter_stat(dude_obj, STAT_ag, 1);
        set_critter_stat(dude_obj, STAT_ch, 1);
        display_mymsg(MSG_relieved);
        if not dude_trait(TRAIT_drug_addict) then hide_iface_tag(INTERFACE_TAG_ADDICT);
    end

    // if still addicted, set timer for next procedure run
    if (global_var(GVAR_ALCOHOL_ADDICT) == 1) then add_global_timer_event(TIME_DURATION_FOR_GLOBAL_TIMER, 0);

end


procedure start begin
    // loading
    if is_loading_game then return;
    // init script once
    if game_loaded then begin
        set_global_script_type(3);
        msg = add_extra_msg_file(MSG_FILE);
        register_hook_proc(HOOK_USEOBJON, use_obj_on_obj_handler);
        register_hook_proc(HOOK_USEOBJ, use_obj_handler);
        variable time_of_addiction;
        ndebug("initialized");
        return;
    end
end
